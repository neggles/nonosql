[project]
name = "nonosql"
authors = [
  { name = "Andi Powers-Holmes", email = "aholmes@omnom.net" },
]
description = "A NoSQL database that isn't NoSQL or really even a database"
readme = "README.md"
requires-python = ">=3.10"
keywords = [
  "nosql",
  "database",
  "nonosql",
]
license = { file = "LICENSE.md" }
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Operating System :: OS Independent",
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Database",
  "Topic :: Database :: Database Engines/Servers",
]
dynamic = ["version"]
dependencies = [
  "typer >= 0.12.0",
]

[project.optional-dependencies]
dev = [
  "ruff >=0.0.289",
  "setuptools-scm >= 8.0.0",
  "pre-commit >= 3.0.0",     # remember to run `pre-commit install` after installing
]
all = [
  "nonosql[dev]",
  "nonosql[extra]",
]

[project.scripts]
nonosql = "nonosql.cli:main"

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=64", "wheel", "setuptools_scm>=8"]

[tool.ruff]
line-length = 110
target-version = "py310"
extend-exclude = ["/usr/lib/*"]

[tool.ruff.lint]
ignore = [
  "F841", # local variable assigned but never used
  "F842", # local variable annotated but never used
  "E501", # line too long - will be fixed in format
  "F401", # imported but unused
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false
docstring-code-format = true
exclude = [
  "src/nonosql/_version.py", # generated by setuptools_scm
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
known-local-folder = ["src"]
known-first-party = [
  "nonosql",
]

[tool.pyright]
include = ["src"]
exclude = [
  "**/__pycache__", # cache directories
  "./typings",      # generated type stubs
]
stubPath = "./typings"
# reportMissingTypeStubs = "information"  # re-enable this once autogen of stubs actually works

[tool.tomlsort]
in_place = true
no_sort_tables = true
spaces_before_inline_comment = 1
spaces_indent_inline_array = 2
trailing_comma_inline_array = true
sort_first = [
  "project",
  "build-system",
  "tool.setuptools",
]

# needs to be last for CI reasons
[tool.setuptools_scm]
write_to = "src/nonosql/_version.py"
version_scheme = "post-release"
